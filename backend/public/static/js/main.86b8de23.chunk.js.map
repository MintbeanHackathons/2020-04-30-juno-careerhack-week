{"version":3,"sources":["../../node_modules/@auth0/auth0-spa-js/dist sync","components/CommentAdd.js","components/CommentView.js","components/CommentEdit.js","components/Submit.js","components/ArticleAdd.js","react-auth0-spa.js","components/NavBar.js","components/Profile.js","utils/history.js","components/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","CommentAdd","props","onChangeUsername","setState","username","target","value","onChangeComment","comment","onSubmit","preventDefault","userComment","state","axios","post","then","res","console","log","data","window","location","users","get","response","length","map","user","className","this","htmlFor","name","ref","required","onChange","key","rows","cols","type","Component","Comment","to","_id","href","onClick","deleteComment","CommentView","delete","comments","filter","el","catch","error","currentComment","commentList","CommentEdit","match","params","withRouter","Submit","onChangeTitle","title","onChangeUrl","url","newArticle","ArticleAdd","articles","author","contentURL","userName","article","DEFAULT_REDIRECT_CALLBACK","history","replaceState","document","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","Provider","getIdTokenClaims","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","NavBar","exact","Profile","src","picture","alt","nickname","createBrowserHistory","PrivateRoute","component","path","rest","targetUrl","fn","render","App","basename","Boolean","hostname","ReactDOM","StrictMode","domain","config","client_id","clientId","redirect_uri","origin","push","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.86b8de23.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 74;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass CommentAdd extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state ={\r\n      username: '',\r\n      comment: '',\r\n      users: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get('http://localhost:5000/users/')\r\n    .then(response =>{\r\n      if (response.data.length > 0){\r\n        this.setState({\r\n          users: response.data.map(user => user.username),\r\n          username: response.data[0].username\r\n        })\r\n      }\r\n    })\r\n    }\r\n\r\n  onChangeUsername = (e) => {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeComment = (e) => {\r\n    this.setState({\r\n      comment: e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault()\r\n    const userComment = {\r\n      username: this.state.username,\r\n      comment: this.state.comment\r\n    }\r\n\r\n    axios.post('http://localhost:5000/comments/add', userComment)\r\n    .then(res => console.log(res.data));\r\n\r\n    window.location = '/'\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"comment\">\r\n        <form onSubmit={this.onSubmit}>\r\n          <label htmlFor=\"username\"> username: </label>\r\n          <select\r\n          name=\"username\"\r\n          id =\"username\"\r\n          ref=\"userInput\"\r\n            required\r\n            value = {this.state.username}\r\n            onChange={this.onChangeUsername}>\r\n              {this.state.users.map( (user) =>{\r\n                  return (\r\n                    <option \r\n                    key={user} \r\n                    value={user}>\r\n                      {user}\r\n                    </option>\r\n                  ); \r\n                })} \r\n            </select>\r\n            <label htmlFor=\"comment\">comment: </label>\r\n            <textarea name=\"comment\" id=\"comment\" value={this.state.comment} onChange={this.onChangeComment} rows=\"4\" cols=\"50\"> </textarea>\r\n            <button type=\"submit\">add comment</button>\r\n        </form>\r\n        \r\n      </div>\r\n    ); \r\n  }\r\n}\r\n\r\nexport default CommentAdd;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Comment = props => {\r\n    return (\r\n      <tr className=\"commentDetails\">\r\n        <td>{props.comment.username}: </td>\r\n        <td>{props.comment.comment}</td>\r\n        <td>\r\n            <Link to={\"/edit/\" + props.comment._id}>edit</Link> | <a href=\"#\" onClick={() => { props.deleteComment(props.comment._id); }}>\r\n              delete\r\n          </a>\r\n        </td>\r\n      </tr>\r\n    );   \r\n}\r\n\r\nclass CommentView extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n          comments: []\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount(){\r\n        axios\r\n          .get(\"http://localhost:5000/comments/\")\r\n          .then((response) => {\r\n            this.setState({ comments: response.data });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n    }\r\n\r\n\r\n  deleteComment = (id) => {\r\n    axios.delete(\"http://localhost:5000/comments/\" + id)\r\n      .then(res => console.log(res.data));\r\n    this.setState({\r\n      comments: this.state.comments.filter(el => el._id !== id)\r\n    })\r\n  }\r\n\r\n    // for every element in the comments array return a component ( a row of the table)\r\n    commentList(){\r\n        return this.state.comments.map(currentComment => {\r\n            return <Comment comment={currentComment} deleteComment={this.deleteComment} key={currentComment._id}/>;\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n          <div className=\"viewComments\">\r\n            <h2>comments:</h2>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th></th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                  { this.commentList() }\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        );\r\n    }\r\n}\r\nexport default CommentView;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass CommentEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log('commentEdit this.props', this.props);\r\n    this.state = {\r\n      username: '',\r\n      comment: '',\r\n      users: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"http://localhost:5000/comments/\"+this.props.match.params.id)\r\n    .then(response => {\r\n        this.setState({\r\n            username: response.data.username,\r\n            comment: response.data.comment\r\n        })\r\n    })\r\n    .catch = (error) =>{\r\n        console.log(error);\r\n    }\r\n\r\n    axios.get(\"http://localhost:5000/users/\")\r\n    .then((response) => {\r\n      if (response.data.length > 0) {\r\n        this.setState({\r\n          users: response.data.map((user) => user.username),\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onChangeUsername = (e) => {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  };\r\n\r\n  onChangeComment = (e) => {\r\n    this.setState({\r\n      comment: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const userComment = {\r\n      username: this.state.username,\r\n      comment: this.state.comment,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/comments/update/\"+this.props.match.params.id, userComment)\r\n      .then((res) => console.log(res.data));\r\n\r\n    window.location = '/'\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"comment\">\r\n        <h3>edit comment</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n          <label> username: </label>\r\n          <select\r\n            ref=\"userInput\"\r\n            required\r\n            value={this.state.username}\r\n            onChange={this.onChangeUsername}\r\n          >\r\n            {this.state.users.map((user) => {\r\n              return (\r\n                <option key={user} value={user}>\r\n                  {user}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n\r\n          <label>Comment: </label>\r\n          <input\r\n            type=\"textarea\"\r\n            name=\"comment\"\r\n            id=\"comment\"\r\n            value={this.state.comment}\r\n            onChange={this.onChangeComment}\r\n          />\r\n          <button type=\"submit\" value=\"edit comment\">edit comment</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(CommentEdit);\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass Submit extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      title: '',\r\n      url: '',\r\n    }\r\n  }\r\n\r\n  onChangeTitle = (e) => {\r\n    this.setState({\r\n      title: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeUrl = (e) => {\r\n    this.setState ({\r\n      url: e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault()\r\n    const newArticle = {\r\n      title: this.state.title,\r\n      url: this.state.url\r\n    }\r\n    \r\n    axios.post('http://localhost:5000/articles/add', newArticle)\r\n    .then(res => console.log(res.data));\r\n  }\r\n\r\n  \r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit\">\r\n        <h2>Submit Articles:</h2>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"title\">\r\n            <label htmlFor=\"title\">title: </label>\r\n            <input type=\"text\" name=\"title\" id=\"title\"\r\n            value = {this.state.title}\r\n            onChange={this.onChangeTitle} />\r\n          </div>\r\n          <div className=\"url\">\r\n            <label htmlFor=\"url\">url: </label>\r\n            <input type=\"url\" name=\"url\" id=\"url\"\r\n            value={this.state.url}\r\n            onChange={this.onChangeUrl}/>\r\n          </div>\r\n          <div className=\"submitButton\">\r\n            <button>submit</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Submit;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass ArticleAdd extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state ={\r\n      // empty array for the articles data\r\n      articles : [],\r\n      // handlers for the articles data\r\n      id: '',\r\n      title: '',\r\n      author: '',\r\n      contentURL: '',\r\n      // empty array for all the comment data\r\n      comment: [],\r\n      // handlers for the comments data\r\n      userName: \"\",\r\n      userComment: \"\"\r\n    }\r\n\r\n    console.log(this.state);\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get('http://localhost:5000/articles/')\r\n    .then(response =>{\r\n      console.log(response);\r\n      if (response.data.length > 0){\r\n        this.setState({\r\n          articles: response.data\r\n          // comment: [response.data.map(article => article.comment)],\r\n          // userName: response.data.map(article => article.comment.userName),\r\n          // entryDate: response.data.map(article => article.comment.date),\r\n          // userComment: response.data.map(article => article.comment.comment)\r\n        })\r\n      }\r\n    \r\n    })\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"thread\">\r\n        <h3>Articles</h3>\r\n        <ol>\r\n          {this.state.articles.map((article) => {\r\n            return (\r\n              <li key={article._id}>\r\n                <a href={article.contentURL}>{article.title}</a>\r\n                {/* <p>Comment</p> */}\r\n              </li>\r\n            );\r\n          })}\r\n        </ol>\r\n      </div>\r\n    ); \r\n  }\r\n}\r\n\r\nexport default ArticleAdd;","// src/react-auth0-spa.js\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n    window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nexport const Auth0Context = React.createContext();\r\nexport const useAuth0 = () => useContext(Auth0Context);\r\nexport const Auth0Provider = ({\r\n    children,\r\n    onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n    ...initOptions\r\n}) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState();\r\n    const [user, setUser] = useState();\r\n    const [auth0Client, setAuth0] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const initAuth0 = async () => {\r\n            const auth0FromHook = await createAuth0Client(initOptions);\r\n            setAuth0(auth0FromHook);\r\n\r\n            if (window.location.search.includes(\"code=\") &&\r\n                window.location.search.includes(\"state=\")) {\r\n                const { appState } = await auth0FromHook.handleRedirectCallback();\r\n                onRedirectCallback(appState);\r\n            }\r\n\r\n            const isAuthenticated = await auth0FromHook.isAuthenticated();\r\n\r\n            setIsAuthenticated(isAuthenticated);\r\n\r\n            if (isAuthenticated) {\r\n                const user = await auth0FromHook.getUser();\r\n                setUser(user);\r\n            }\r\n\r\n            setLoading(false);\r\n        };\r\n        initAuth0();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const loginWithPopup = async (params = {}) => {\r\n        setPopupOpen(true);\r\n        try {\r\n            await auth0Client.loginWithPopup(params);\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            setPopupOpen(false);\r\n        }\r\n        const user = await auth0Client.getUser();\r\n        setUser(user);\r\n        setIsAuthenticated(true);\r\n    };\r\n\r\n    const handleRedirectCallback = async () => {\r\n        setLoading(true);\r\n        await auth0Client.handleRedirectCallback();\r\n        const user = await auth0Client.getUser();\r\n        setLoading(false);\r\n        setIsAuthenticated(true);\r\n        setUser(user);\r\n    };\r\n    return (\r\n        <Auth0Context.Provider\r\n            value={{\r\n                isAuthenticated,\r\n                user,\r\n                loading,\r\n                popupOpen,\r\n                loginWithPopup,\r\n                handleRedirectCallback,\r\n                getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n                loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n                getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n                getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n                logout: (...p) => auth0Client.logout(...p)\r\n            }}\r\n        >\r\n            {children}\r\n        </Auth0Context.Provider>\r\n    );\r\n};","// src/components/NavBar.js\r\n\r\nimport React from \"react\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n\r\n    const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\r\n\r\n    return (\r\n        <div className=\"navigation\">\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to=\"/\" exact>SHLCNews</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/submit\">submit</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"loginButton\">\r\n                            {!isAuthenticated && (\r\n                                <button onClick={() => loginWithRedirect({})}>log in</button>\r\n                            )}\r\n                            {isAuthenticated && <button onClick={() => logout()}>log out</button>}\r\n                            {isAuthenticated && (\r\n                                <span>\r\n                                    <Link to=\"/profile\">profile</Link>\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;","// src/components/Profile.js\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\n\r\nconst Profile = () => {\r\n\r\n    const { loading, user } = useAuth0();\r\n\r\n    if (loading || !user) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"profileDetails\">\r\n                <div className=\"imgContainer\">\r\n                    <img src={user.picture} alt=\"Profile\" />\r\n                </div>\r\n                <h2>{user.nickname}</h2>\r\n                <h2>{user.name}</h2>\r\n                {/* <code>{JSON.stringify(user, null, 2)}</code> */}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();","import React, { useEffect } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\n\r\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\r\n    const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\r\n\r\n    useEffect(() => {\r\n        if (loading || isAuthenticated) {\r\n            return;\r\n        }\r\n        const fn = async () => {\r\n            await loginWithRedirect({\r\n                appState: { targetUrl: window.location.pathname }\r\n            });\r\n        };\r\n        fn();\r\n    }, [loading, isAuthenticated, loginWithRedirect, path]);\r\n\r\n    const render = props =>\r\n        isAuthenticated === true ? <Component {...props} /> : null;\r\n\r\n    return <Route path={path} render={render} {...rest} />;\r\n};\r\n\r\nexport default PrivateRoute;","import React, { Component } from 'react';\r\nimport CommentAdd from './components/CommentAdd';\r\nimport CommentView from './components/CommentView'\r\nimport CommentEdit from './components/CommentEdit'\r\nimport Submit from './components/Submit';\r\nimport ArticleAdd from './components/ArticleAdd'\r\nimport './App.css';\r\nimport NavBar from \"./components/NavBar\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"./components/Profile\";\r\nimport history from \"./utils/history\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router basename=\"/\" history={history}>\r\n        <div className=\"App\">\r\n          <NavBar />\r\n          \r\n          <Switch>\r\n            <Route path=\"/\" exact />\r\n            <PrivateRoute \r\n              path=\"/profile\" \r\n              component={Profile} />\r\n          </Switch>\r\n\r\n          <Route\r\n            path=\"/submit\"\r\n            render={() => (\r\n              <Submit />\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/\" exact\r\n            render={() => (\r\n              <div>\r\n                <ArticleAdd />\r\n                <CommentAdd />\r\n                <CommentView />\r\n              </div>\r\n            )}\r\n          />\r\n          <Route \r\n            path=\"/edit/:id\" \r\n            component={CommentEdit} \r\n          />\r\n\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Auth0Provider } from \"./react-auth0-spa\";\nimport config from \"./auth_config.json\";\nimport history from \"./utils/history\";\n\n// A function that routes the user to the right place\n// after login\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0Provider\n      domain={config.domain}\n      client_id={config.clientId}\n      redirect_uri={window.location.origin}\n      onRedirectCallback={onRedirectCallback}\n    >\n      <App />\n    </Auth0Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}